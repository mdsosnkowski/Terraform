name: Project 6 - Build with Artifact
# Save terraform.state in Github Artifacts
# Reuse artifact state file by Terraform destroy actions.
on:
  workflow_dispatch:   # allows you to trigger manually
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "backend" ]

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      # Step 1: Terraform fmt check
      - name: Terraform Format Check
        run: terraform fmt
        working-directory: AWS-Terraform/Project-6-DeployDestroy-GithubActions/main

      # Step 2: Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: AWS-Terraform/Project-6-DeployDestroy-GithubActions/main

      # Step 3: Validate Terraform
      - name: Terraform Validate
        run: terraform validate
        working-directory: AWS-Terraform/Project-6-DeployDestroy-GithubActions/main

      # Step 4: Apply the build 
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve -input=false
        working-directory: AWS-Terraform/Project-6-DeployDestroy-GithubActions/main
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
      
      # Step 5: Create the artifact for reuse
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-state
          path: AWS-Terraform/Project-6-DeployDestroy-GithubActions/main/terraform.tfstate
